---
import { fade } from 'astro:transitions';
import { getCollection } from 'astro:content';

import BlogLayout from '../../layouts/BlogLayout.astro';

interface POST {
	id: string;
	body?: string;
	collection: "blog";
	data: {
		title: string;
		description: string;
		pubDate: Date;
		updatedDate?: Date;
		heroImage?: string;
	};
}

const posts = (await getCollection('blog')).sort(
	(a: POST, b: POST) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

---

<BlogLayout>
	<section transition:animate={fade({ duration: '0.4s'})}>
		<ul>
			{
				posts.map((post: POST) => (
					<li>
						<a href={`/blog/${post.id}/`}>
							<img  src={post.data.heroImage} alt="" />
							<h4 class="title">{post.data.title}</h4>
							<p class="date">
								{
									new Intl.DateTimeFormat('es-MX', {
										dateStyle: 'full',
										timeZone: 'America/Mexico_City',
									}).format(post.data.pubDate)
								}
							</p>
						</a>
					</li>
				))
			}
		</ul>
	</section>
</BlogLayout>

<style>
	body {
		margin: auto;
		margin-bottom: 1em;
	}

	ul {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(clamp(6rem, 430vw, 25rem), 1fr));
		grid-auto-flow: row dense;
		gap: .7rem;

		li {
			padding: .5em;
			border-radius: 10px;
			transition: all .3s ease;
			&:hover {
				box-shadow: 0 0 15px #00af9892;
				transform: scale(1.05);
			}
		}

		a {
			display: block;

			img {
				width: 100%;
				height: auto;
			}

			h4 {
				margin: .5rem 0;
				background: var(--text-gradient);
				background-clip: text;
				-webkit-text-fill-color: transparent;

				
			}

			.date {
				color: var(--sub-text);
				font-size: .8em;
			}
		}

		
	}
</style>